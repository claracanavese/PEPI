plot2pc <- final2c %>%
#filter(`Z+` < 1000) %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)),fill = "#D5D139", bins = 100, na.rm = TRUE) +
stat_function(fun = dexp, args = list(rate = as.numeric(rate2c[2])), size=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(4e3,8e3), labels = function(x) format(x, scientific = TRUE),limits = c(0,9e3)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE), limits = c(0,4e-3), breaks = c(0,2e-3,4e-3)) +
labs(x="z+",y="p(z+)") + ylim(0,0.004)
plot2pa + plot2pb + plot2pc
# plus
plot2pa <- final2a %>%
#filter(`Z+` < 1000) %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)),fill = "#D5D139", bins = 120, na.rm = TRUE) +
stat_function(fun = dexp, args = list(rate = as.numeric(rate2a[2])), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(4e3,8e3), labels = function(x) format(x, scientific = TRUE),limits = c(0,9e3)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE), limits = c(0,4e-3), breaks = c(0,2e-3,4e-3)) +
labs(x="z+",y="p(z+)")  #+ ylim(0,0.004)
plot2pb <- final2b %>%
#filter(`Z+` < 1000) %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)),fill = "#D5D139", bins = 100, na.rm = TRUE) +
stat_function(fun = dexp, args = list(rate = as.numeric(rate2b[2])), size=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(4e3,8e3), labels = function(x) format(x, scientific = TRUE),limits = c(0,9e3)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE), limits = c(0,4e-3), breaks = c(0,2e-3,4e-3)) +
labs(x="z+",y="p(z+)") #+ ylim(0,0.004)
plot2pc <- final2c %>%
#filter(`Z+` < 1000) %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)),fill = "#D5D139", bins = 100, na.rm = TRUE) +
stat_function(fun = dexp, args = list(rate = as.numeric(rate2c[2])), size=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(4e3,8e3), labels = function(x) format(x, scientific = TRUE),limits = c(0,9e3)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE), limits = c(0,4e-3), breaks = c(0,2e-3,4e-3)) +
labs(x="z+",y="p(z+)") #+ ylim(0,0.004)
plot2pa + plot2pb + plot2pc
(plot2ma + plot2mb + plot2mc) / (plot2pa + plot2pb + plot2pc)
ggsave("./second_case.png",  width = 16, height = 8, dpi = 600)
# minus
plot3ma <- final3a %>%
ggplot(aes(x=z_minus)) +
geom_histogram(aes(y=after_stat(density)), bins=80, fill=rgb(102,204,102,maxColorValue = 255), na.rm = TRUE) +
geom_line(data=analytic1 %>% filter(type=="z_minus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(1e4,2e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,2.5e4)) +
labs(x="z-",y="p(z-)")
plot3mb <- final3b %>%
ggplot(aes(x=z_minus)) +
geom_histogram(aes(y=after_stat(density)), bins=80, fill=rgb(102,204,102,maxColorValue = 255), na.rm = TRUE) +
geom_line(data=analytic2 %>% filter(type=="z_minus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(1e4,2e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,2.5e4)) +
labs(x="z-",y="p(z-)")
plot3mc <- final3c %>%
ggplot(aes(x=z_minus)) +
geom_histogram(aes(y=after_stat(density)), bins=80, fill=rgb(102,204,102,maxColorValue = 255), na.rm = TRUE) +
geom_line(data=analytic3 %>% filter(type=="z_minus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(1e4,2e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,2.5e4)) +
labs(x="z-",y="p(z-)")
(plot3ma + plot3mb + plot3mc)
plot3pa <- final3a %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)), bins=150, fill="#D5D139", na.rm = TRUE) +
geom_line(data=analytic1 %>% filter(type=="z_plus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15)) +
scale_x_continuous(breaks = c(2e4,4e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,5e4)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE),limits = c(0,2e-4)) +
labs(x="z+",y="p(z+)")
plot3pa <- final3a %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)), bins=150, fill="#D5D139", na.rm = TRUE) +
geom_line(data=analytic1 %>% filter(type=="z_plus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(2e4,4e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,5e4)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE),limits = c(0,2e-4)) +
labs(x="z+",y="p(z+)")
plot3p
plot3pb <- final3b %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)), bins=150, fill="#D5D139", na.rm = TRUE) +
geom_line(data=analytic2 %>% filter(type=="z_plus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(2e4,4e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,5e4)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE),limits = c(0,2e-4)) +
labs(x="z+",y="p(z+)")
plot3pc <- final3c %>%
ggplot(aes(x=z_plus)) +
geom_histogram(aes(y=after_stat(density)), bins=150, fill="#D5D139", na.rm = TRUE) +
geom_line(data=analytic3 %>% filter(type=="z_plus"), aes(x=z,y=P), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
scale_x_continuous(breaks = c(2e4,4e4), labels = function(x) format(x, scientific = TRUE),limits = c(0,5e4)) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE),limits = c(0,2e-4)) +
labs(x="z+",y="p(z+)")
plot3pa + plot3pb + plot3pc
(plot3ma + plot3mb + plot3mc) / (plot3pa + plot3pb + plot3pc)
ggsave("./third_case.png",  width = 16, height = 8, dpi = 600)
View(final1a)
# size
final2a %>% mutate(z = z_plus + z_minus)
# size
final2a <- final2a %>% mutate(z = z_plus + z_minus)
# size
final1a <- final1a %>% mutate(z = z_plus + z_minus)
# size
final2a <- final2a %>% mutate(z = z_plus + z_minus)
# size
final3a <- final3a %>% mutate(z = z_plus + z_minus)
final1a %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE)
ratetota = 1./(1./rate1a[1] + 1./rate1a[2])
ratetota = 1./(1./as.numeric(rate1a[1]) + 1./as.numeric(rate1a[2]))
stat_function(fun = dexp, args = list(rate = ratetota, linewidth=0.6) +
plot1a <- final1a %>%
ggplot(aes(x=z)) +
plot1a <- final1a %>%
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
plot1a <- final1a %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetota), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot1a
plot1a <- final1a %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetota), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot1a
ratetot2a = 1./(1./as.numeric(rate2a[1]) + 1./as.numeric(rate2a[2]))
plot2a <- final2a %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot2a), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot2a
ratetot1b = 1./(1./as.numeric(rate1b[1]) + 1./as.numeric(rate1b[2]))
ratetot1c = 1./(1./as.numeric(rate1c[1]) + 1./as.numeric(rate1c[2]))
plot1b <- final1b %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot1b), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot1b
# size
final1a <- final1a %>% mutate(z = z_plus + z_minus)
final1b <- final1b %>% mutate(z = z_plus + z_minus)
final1c <- final1c %>% mutate(z = z_plus + z_minus)
ratetot1a = 1./(1./as.numeric(rate1a[1]) + 1./as.numeric(rate1a[2]))
ratetot1b = 1./(1./as.numeric(rate1b[1]) + 1./as.numeric(rate1b[2]))
ratetot1c = 1./(1./as.numeric(rate1c[1]) + 1./as.numeric(rate1c[2]))
plot1b <- final1b %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot1b), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot1b
plot1c <- final1c %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot1c), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot1c
ratetot2a = 1./(1./as.numeric(rate2a[1]) + 1./as.numeric(rate2a[2]))
ratetot2b = 1./(1./as.numeric(rate2b[1]) + 1./as.numeric(rate2b[2]))
ratetot2c = 1./(1./as.numeric(rate2c[1]) + 1./as.numeric(rate2c[2]))
plot2b <- final2b %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot2b), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot2c <- final2c %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot2c), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot2b
# size
final2a <- final2a %>% mutate(z = z_plus + z_minus)
final2b <- final2b %>% mutate(z = z_plus + z_minus)
final2c <- final2c %>% mutate(z = z_plus + z_minus)
ratetot2a = 1./(1./as.numeric(rate2a[1]) + 1./as.numeric(rate2a[2]))
ratetot2b = 1./(1./as.numeric(rate2b[1]) + 1./as.numeric(rate2b[2]))
ratetot2c = 1./(1./as.numeric(rate2c[1]) + 1./as.numeric(rate2c[2]))
plot2b <- final2b %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot2b), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot2b
plot2c <- final2c %>%
ggplot(aes(x=z)) +
geom_histogram(aes(y=after_stat(density)), fill = rgb(102,204,102,maxColorValue = 255), bins = 90, na.rm=TRUE) +
stat_function(fun = dexp, args = list(rate = ratetot2c), linewidth=0.6) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x="z",y="p(z)") +
scale_x_continuous(labels = function(x) format(x, scientific = TRUE))
plot2c
library(rstan)
library(magrittr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(patchwork)
library(bayesplot)
prior_lambda = ggplot() + stat_function(fun=dgamma, args = list(shape = 2., rate = 1.)) +
xlim(0,5) + ggtitle("Prior") + xlab("lambda") + theme(plot.title = element_text(hjust = 0.5)) + ylab("density")
# prior_omega = ggplot() + stat_function(fun=dcauchy, args = list(location = 0.01, scale = 0.01)) +
#   ggtitle("Prior") + xlab("omega") + theme(plot.title = element_text(hjust = 0.5)) + ylab("density") + xlim(0.,0.03)
prior_omega = ggplot() + stat_function(fun = dgamma, args = list(shape = 1.5, rate = 280)) +
ggtitle("Prior") + xlab("omega") + theme(plot.title = element_text(hjust = 0.5)) + ylab("density") + xlim(0.,0.03)
prior_lambda
prior_lambda = ggplot() + stat_function(fun=dgamma, args = list(shape = 2., rate = 1.)) +
xlim(0,5) + ggtitle("Prior") + xlab(expression(lambda)) + theme(plot.title = element_text(hjust = 0.5)) + ylab("density")
prior_lambda
prior_lambda = ggplot() + stat_function(fun=dgamma, args = list(shape = 2., rate = 1.)) +
xlim(0,5) + ggtitle("Prior") + xlab(expression(lambda)) + theme(plot.title = element_text(hjust = 0.5)) + ylab(expression(p(lambda)))
prior_lambda
prior_lambda = ggplot() +
stat_function(fun=dgamma, args = list(shape = 2., rate = 1.)) +
xlim(0,5) +
ggtitle("Prior distribution") +
xlab(expression(lambda)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(expression(p(lambda))) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
# prior_omega = ggplot() + stat_function(fun=dcauchy, args = list(location = 0.01, scale = 0.01)) +
#   ggtitle("Prior") + xlab("omega") + theme(plot.title = element_text(hjust = 0.5)) + ylab("density") + xlim(0.,0.03)
prior_omega = ggplot() + stat_function(fun = dgamma, args = list(shape = 1.5, rate = 280)) +
ggtitle("Prior") + xlab("omega") + theme(plot.title = element_text(hjust = 0.5)) + ylab("density") + xlim(0.,0.03)
prior_lambda = ggplot() +
stat_function(fun=dgamma, args = list(shape = 2., rate = 1.)) +
xlim(0,5) +
ggtitle("Prior distribution") +
xlab(expression(lambda)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(expression(p(lambda))) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18))
prior_lambda
prior_lambda = ggplot() +
stat_function(fun=dgamma, args = list(shape = 2., rate = 1.), linewidth = 1) +
xlim(0,5) +
ggtitle("Prior distribution") +
xlab(expression(lambda)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(expression(p(lambda))) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18))
prior_lambda
prior_omega = ggplot() +
stat_function(fun = dgamma, args = list(shape = 1.5, rate = 280), linewidth = 1) +
ggtitle("Prior distribution") +
xlab(expression(omega)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab("density") +
xlim(0.,0.03) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18))
prior_omega
library(deSolve)
library(RColorBrewer)
library(reshape2)
library(magrittr)
library(dplyr)
library(ggplot2)
my_palette <- c("#3bc2ce","#FFCA0A","#ef1a4c")
covariances2 <- function(t, state, parameters) {
with(as.list(c(state,parameters)), {
dM1 <- lambda_min*M1 + omega_min*M2
dM2 <- lambda_plus*M2 + omega_plus*M1
dV1 <- 2*lambda_min*V1 + 2*omega_min*C + (alpha_min+beta_min)*M1 + omega_min*M2
dV2 <- 2*lambda_plus*V2 + 2*omega_plus*C + (alpha_plus+beta_plus)*M2 + omega_plus*M1
dC <- (lambda_min + lambda_plus)*C + omega_plus*V1 + omega_min*V2
list(c(dM1, dM2, dV1, dV2, dC))
})
}
state2 <- c(M1 = 1, M2 = 0, V1 = 0, V2 = 0, C = 0)
parameters <- c(lambda_min = 1.0, lambda_plus = 1.0, omega_min = 1.0, omega_plus = 1.0, alpha_min = 1.0, beta_min = 0, alpha_plus = 1.0, beta_plus = 0)
out2 <- ode(y = state2, times = seq(0, 50, by = 0.01), func = covariances2, parms = parameters)
out2_df <- data.frame(t = out2[,1], M1 = out2[,2], M2 = out2[,3], V1 = out2[,4], V2 = out2[,5], C = out2[,6])
out2_df %>%
#mutate(V1 = S1 - M1**2,V2 = S2 - M2**2) %>%
mutate(D1 = sqrt(V1), D2 = sqrt(V2)) %>%
mutate(R1 = D1/M1, R2 = D2/M2) %>%
ggplot() +
geom_line(aes(x = t,y = R1, color = "z-"), linewidth = 1) +
geom_line(aes(x = t,y = R2, color = "z+"), linewidth = 1)
out2_df %>%
#mutate(V1 = S1 - M1**2,V2 = S2 - M2**2) %>%
mutate(D1 = sqrt(V1), D2 = sqrt(V2)) %>%
mutate(R1 = D1/M1, R2 = D2/M2) %>%
ggplot() +
geom_line(aes(x = t,y = R1, color = "z-"), linewidth = 1) +
geom_line(aes(x = t,y = R2, color = "z+"), linewidth = 1) +
ylim(0,5)
out2_df %>%
#mutate(V1 = S1 - M1**2,V2 = S2 - M2**2) %>%
mutate(D1 = sqrt(V1), D2 = sqrt(V2)) %>%
mutate(R1 = D1/M1, R2 = D2/M2) %>%
ggplot() +
geom_line(aes(x = t,y = R!, color = "z-"), linewidth = 1) +
out2_df %>%
#mutate(V1 = S1 - M1**2,V2 = S2 - M2**2) %>%
mutate(D1 = sqrt(V1), D2 = sqrt(V2)) %>%
mutate(R1 = D1/M1, R2 = D2/M2) %>%
ggplot() +
geom_line(aes(x = t,y = R!, color = "z-"), linewidth = 1) +
out2_df %>%
#mutate(V1 = S1 - M1**2,V2 = S2 - M2**2) %>%
mutate(D1 = sqrt(V1), D2 = sqrt(V2)) %>%
mutate(R1 = D1/M1, R2 = D2/M2) %>%
ggplot() +
geom_line(aes(x = t,y = R1, color = "z-"), linewidth = 1) +
geom_line(aes(x = t,y = R2, color = "z+"), linewidth = 1) +
labs(x = "t", y = expression(sigma/mu), color = NULL) +
ylim(0,5)
zmin_ode <- function(t, z0, lambda_minus, lambda_plus, omega_minus, omega_plus){
delta = (lambda_minus - lambda_plus)^2 + 4*omega_minus*omega_plus
c1 = ((lambda_minus - lambda_plus + sqrt(delta))*z0[1] + 2*omega_minus*z0[2])/((lambda_minus - lambda_plus + sqrt(delta))^2 + 4*omega_minus*omega_plus)
c2 = (2*omega_plus*z0[1] - (lambda_minus - lambda_plus + sqrt(delta))*z0[2])/((lambda_minus - lambda_plus + sqrt(delta))^2 + 4*omega_minus*omega_plus)
zmin = exp((lambda_minus + lambda_plus)*t/2.)*(c1*(lambda_minus - lambda_plus + sqrt(delta))*exp(sqrt(delta)*t/2.) + c2*2*omega_minus*exp(-sqrt(delta)*t/2.))
return(zmin)
}
zplus_ode <- function(t, z0, lambda_minus, lambda_plus, omega_minus, omega_plus){
delta = (lambda_minus - lambda_plus)^2 + 4*omega_minus*omega_plus
c1 = ((lambda_minus - lambda_plus + sqrt(delta))*z0[1] + 2*omega_minus*z0[2])/((lambda_minus - lambda_plus + sqrt(delta))^2 + 4*omega_minus*omega_plus)
c2 = (2*omega_plus*z0[1] - (lambda_minus - lambda_plus + sqrt(delta))*z0[2])/((lambda_minus - lambda_plus + sqrt(delta))^2 + 4*omega_minus*omega_plus)
zplus = exp((lambda_minus + lambda_plus)*t/2.)*(c1*2*omega_plus*exp(sqrt(delta)*t/2.) + c2*(lambda_plus - lambda_minus - sqrt(delta))*exp(-sqrt(delta)*t/2.))
return(zplus)
}
z0 <- as.array(c(1,0))
t <- seq(0,5, length=101)
dplyr::tibble(
zmin = zmin_ode(time, z0 = z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01),
zplus = zplus_ode(time, z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01)
)
input <- lapply(t, function(time) {
dplyr::tibble(
zmin = zmin_ode(time, z0 = z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01),
zplus = zplus_ode(time, z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01)
)
}) %>% do.call('bind_rows', .)
library(ggplot2)
library(magrittr)
library(tidyverse)
library(reshape2)
library(patchwork)
library(plotly)
library(stabledist)
library(pdqr)
input <- lapply(t, function(time) {
dplyr::tibble(
zmin = zmin_ode(time, z0 = z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01),
zplus = zplus_ode(time, z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01)
)
}) %>% do.call('bind_rows', .)
#sim <- sim[1:(nrow(sim)-1),]
input$t <- t
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), size = 0.8)
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8)
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18))
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18)) +
labs(x = "t", y = "Z")
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = "none") +
labs(x = "t", y = "Z")
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
compmin = ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "ODE"), linewidth = 0.8) +
geom_line(data = output, aes(x = t, y = zmin, color = "Inference"), size = 0.8) + xlim(6,10) +
# geom_line(data = output2, aes(x = t, y = zmin, color = "inf5_min"), size = 0.8) +
# geom_point(data = simulation5, aes(x = time, y = z_minus, color = "sim4"), size = 1) +
geom_point(data = simulation_py, aes(x = time, y = z_minus, color = "Input"), size = 1.5) +
labs(y="z-") +
theme(legend.text = element_text(size = 16), axis.text = element_text(size = 16), axis.title = element_text(size = 18)) +
scale_color_manual(values = c("red","black","blue"), name = element_blank()) +
theme(legend.position = "none")
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
compmin = ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "ODE"), linewidth = 0.8) +
geom_line(data = output, aes(x = t, y = zmin, color = "Inference"), size = 0.8) + xlim(6,10) +
# geom_line(data = output2, aes(x = t, y = zmin, color = "inf5_min"), size = 0.8) +
# geom_point(data = simulation5, aes(x = time, y = z_minus, color = "sim4"), size = 1) +
geom_point(data = simulation_py, aes(x = time, y = z_minus, color = "Input"), size = 1.5) +
labs(y="z-") +
theme(legend.text = element_text(size = 16), axis.text = element_text(size = 16), axis.title = element_text(size = 18)) +
scale_color_manual(values = c("red","black","blue"), name = element_blank()) +
theme(legend.position = "none")
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z")
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 0.8) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 0.8) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A"))
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 1) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 1) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A"))
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 1.5) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 1.5) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A"))
t <- seq(0,10, length=101)
input <- lapply(t, function(time) {
dplyr::tibble(
zmin = zmin_ode(time, z0 = z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01),
zplus = zplus_ode(time, z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01)
)
}) %>% do.call('bind_rows', .)
#sim <- sim[1:(nrow(sim)-1),]
input$t <- t
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 1.5) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 1.5) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A"))
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 1.5) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 1.5) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A")) +
theme(legend.position = "none")
ggsave("./ode_sol_1_0.png", dpi = 600, width = 6, height = 6)
pwd
ggsave("./ode_sol_1_0.png", dpi = 600, width = 5, height = 5)
z0 <- as.array(c(1000,100))
t <- seq(0,10, length=101)
input <- lapply(t, function(time) {
dplyr::tibble(
zmin = zmin_ode(time, z0 = z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01),
zplus = zplus_ode(time, z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01)
)
}) %>% do.call('bind_rows', .)
#sim <- sim[1:(nrow(sim)-1),]
input$t <- t
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 1.5) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 1.5) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A")) +
theme(legend.position = "none")
ggsave("./ode_sol_1000_100.png", dpi = 600, width = 5, height = 5)
z0 <- as.array(c(1,0))
t <- seq(0,10, length=101)
input <- lapply(t, function(time) {
dplyr::tibble(
zmin = zmin_ode(time, z0 = z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01),
zplus = zplus_ode(time, z0, lambda_minus = 1.5, lambda_plus = 1., omega_minus = 0.001, omega_plus = 0.01)
)
}) %>% do.call('bind_rows', .)
#sim <- sim[1:(nrow(sim)-1),]
input$t <- t
ggplot() +
geom_line(data = input, aes(x = t, y = zmin, color = "zmin"), linewidth = 1.5) +
geom_line(data = input, aes(x = t, y = zplus, color = "zplus"), linewidth = 1.5) +
theme(axis.text = element_text(size = 14), axis.title = element_text(size = 18), legend.title = element_blank()) +
labs(x = "t", y = "Z") +
scale_color_manual(values = c("#3bc2ce","#FFCA0A")) +
theme(legend.position = "none")
ggsave("./ode_sol_1_0.png", dpi = 600, width = 5, height = 4)
